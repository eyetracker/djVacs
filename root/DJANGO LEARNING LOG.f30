Lern Tagebuch mit django
------------------------

Abkürzungen:
TEM: Tages-End-Meilenstein 

6.2.2013:
Erste Template - Variablen Zugriffe
POST forms, insb. "next" von i18n:
das template verlangt den INPUT=next. Ich muss also per Post Verfahren dem input paar next:{{redirect_to}} werte zuordnen. statt zu versuchen 'next' zu setzen, war es {{redirect_to}} was gesetzt werden musste! Es handelt sich hierbei um dictionaries...
TEM: i18n/setlang/ ist verwendbar!
            
7.2.2013:
Shortcuts:
render(request, templatename)
render_to_response(templatename)
Die erforderliche request object erzwingt "RequestContext" statt Context und ist dadurch ideal für Forms mit POST data. Der Zwang dazu entsteht durch CSRF validierung bei POST forms.
Bei beiden objekten wird als nächstes DICTIONARY und CONTEXT_INSTANCE übergeben. Der Sinn hinter dem Dictionary erschliesst sich mir noch nicht, da CONTEXT_INSTANCE fast auch nur ein dictionary ist... c = Context(anydict)

_SET:
bei foreign key objects:
exp.external_source_data_set.count
exp.external_source_data_set.all
also lowerkey(Modelname) und ich kann dann auf alle Modelle zugreifen!!!
anders rum(einfacher fall, im modell definiert):
ext_src_data.experiment (no-brainer)

template object rendering: KEINE WEITEREN SHORTCUTS NOETIG!!!
t  = Template(...)
return HttpResponse(t.render(t_context))

{{ request }}
Kann von templates aus zugegriffen werden, mit extra ...'request' Eintrag in settings.py! (Noch nichts sehr nuetzlich, aber gut zu wissen, dass es nicht standardmaessig unterstuetzt wird)

Damit eine übersetzte MO/PO Datei auch tatsächlich verwendet wird, muss der LOCALE_PATH in der settings.py gesetzt sein.


ZWISCHENZIEL: PARTICIPANT ERSTELLEN
-alle notwendingen daten bereit stellen:
6x random scales zuweisen, 6 IDs als direkter datenbank zugriff, lineare pruefung, ob linked_pcpt == null ist
-CT Task ids zuweisen, ebenfalls aus externen daten
-randomisierte IDs zur zuweisung der CT gruppe fehlen noch... direkt in django schreiben? (neu...) ODER das random scale script anpassen! klingt nach weniger arbeit.
-Purchase experience and intention:
einfachster fall: direktes schreiben in das modell. benoetige nur die HTML form (nur IDs in den POST templates) mit action="verarbeitungsURL"
-Option Box: Anzahl an Choice Tasks 7|14|21

ZWISCHENZIEL: Verknuepfung der Experiment Strings mit den Sawtooth Zahlen
-entweder ein view oder template integrierung, vermutlich eine kombination. brauche eine saubere konversion, bei der ich mich komplett auf die INTEGERs aus Sawtooth verlassen kann...

ZIEL: PAGINATION (aufteilung des gesamten ueber mehrere seiten)
-Trotz Wizard mache ich es manuell... Ich vermute, dass der Wizard sonst zu einem Flaschehals wird, da ich in diesem Aspekt sehr viel Kontrolle benoetige.

Seitenablauf:
(Aktuell)
./eye/expID/                         "New Participant"

Idee: Jede Seite gibt nach "Weiter" den PAGE_CODE zurück. NextPage(PREVIOUS_PAGE_CODE) verarbeitet den alten page code und gibt den neuen zurück.
Data Container: DICTIONARY! Name: page_sequence = {'intro':1,'sc_max':2,'sc_regret':3, 'filler1':4,'filler2':5,'filler3':6,'pl_purchase':7,'explanation':8,'ct':9,'hc':10,'sc_searchgoals,'sc_happiness':11,'demographics':12,'tourn_sel':13}

